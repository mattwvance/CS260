{"ast":null,"code":"import _objectSpread from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, { clone as _clone, extractContentType } from './body.js';\nimport { isRedirect } from './utils/is-redirect.js';\nvar INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nvar Response = /*#__PURE__*/function (_Body, _Symbol$toStringTag) {\n  _inherits(Response, _Body);\n  var _super = _createSuper(Response);\n  function Response() {\n    var _this;\n    var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Response);\n    _this = _super.call(this, body, options);\n\n    // eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n    var status = options.status != null ? options.status : 200;\n    var headers = new Headers(options.headers);\n    if (body !== null && !headers.has('Content-Type')) {\n      var contentType = extractContentType(body, _assertThisInitialized(_this));\n      if (contentType) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n    _this[INTERNALS] = {\n      type: 'default',\n      url: options.url,\n      status: status,\n      statusText: options.statusText || '',\n      headers: headers,\n      counter: options.counter,\n      highWaterMark: options.highWaterMark\n    };\n    return _this;\n  }\n  _createClass(Response, [{\n    key: \"type\",\n    get: function get() {\n      return this[INTERNALS].type;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return this[INTERNALS].url || '';\n    }\n  }, {\n    key: \"status\",\n    get: function get() {\n      return this[INTERNALS].status;\n    }\n\n    /**\n     * Convenience property representing if the request ended normally\n     */\n  }, {\n    key: \"ok\",\n    get: function get() {\n      return this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n    }\n  }, {\n    key: \"redirected\",\n    get: function get() {\n      return this[INTERNALS].counter > 0;\n    }\n  }, {\n    key: \"statusText\",\n    get: function get() {\n      return this[INTERNALS].statusText;\n    }\n  }, {\n    key: \"headers\",\n    get: function get() {\n      return this[INTERNALS].headers;\n    }\n  }, {\n    key: \"highWaterMark\",\n    get: function get() {\n      return this[INTERNALS].highWaterMark;\n    }\n\n    /**\n     * Clone this response\n     *\n     * @return  Response\n     */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Response(_clone(this, this.highWaterMark), {\n        type: this.type,\n        url: this.url,\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n        ok: this.ok,\n        redirected: this.redirected,\n        size: this.size,\n        highWaterMark: this.highWaterMark\n      });\n    }\n\n    /**\n     * @param {string} url    The URL that the new response is to originate from.\n     * @param {number} status An optional status code for the response (e.g., 302.)\n     * @returns {Response}    A Response object.\n     */\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Response';\n    }\n  }], [{\n    key: \"redirect\",\n    value: function redirect(url) {\n      var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 302;\n      if (!isRedirect(status)) {\n        throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n      }\n      return new Response(null, {\n        headers: {\n          location: new URL(url).toString()\n        },\n        status: status\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var response = new Response(null, {\n        status: 0,\n        statusText: ''\n      });\n      response[INTERNALS].type = 'error';\n      return response;\n    }\n  }, {\n    key: \"json\",\n    value: function json() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var body = JSON.stringify(data);\n      if (body === undefined) {\n        throw new TypeError('data is not JSON serializable');\n      }\n      var headers = new Headers(init && init.headers);\n      if (!headers.has('content-type')) {\n        headers.set('content-type', 'application/json');\n      }\n      return new Response(body, _objectSpread(_objectSpread({}, init), {}, {\n        headers: headers\n      }));\n    }\n  }]);\n  return Response;\n}(Body, Symbol.toStringTag);\nexport { Response as default };\nObject.defineProperties(Response.prototype, {\n  type: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  status: {\n    enumerable: true\n  },\n  ok: {\n    enumerable: true\n  },\n  redirected: {\n    enumerable: true\n  },\n  statusText: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  }\n});","map":{"version":3,"names":["Headers","Body","clone","extractContentType","isRedirect","INTERNALS","Symbol","Response","body","options","status","headers","has","contentType","append","type","url","statusText","counter","highWaterMark","ok","redirected","size","RangeError","location","URL","toString","response","data","undefined","init","JSON","stringify","TypeError","set","toStringTag","Object","defineProperties","prototype","enumerable"],"sources":["/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/node-fetch/src/response.js"],"sourcesContent":["/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType} from './body.js';\nimport {isRedirect} from './utils/is-redirect.js';\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n *\n * Ref: https://fetch.spec.whatwg.org/#response-class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nexport default class Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\n\t\tconst status = options.status != null ? options.status : 200;\n\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\ttype: 'default',\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn this[INTERNALS].type;\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\ttype: this.type,\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size,\n\t\t\thighWaterMark: this.highWaterMark\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tstatic error() {\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\n\t\tresponse[INTERNALS].type = 'error';\n\t\treturn response;\n\t}\n\n\tstatic json(data = undefined, init = {}) {\n\t\tconst body = JSON.stringify(data);\n\n\t\tif (body === undefined) {\n\t\t\tthrow new TypeError('data is not JSON serializable');\n\t\t}\n\n\t\tconst headers = new Headers(init && init.headers);\n\n\t\tif (!headers.has('content-type')) {\n\t\t\theaders.set('content-type', 'application/json');\n\t\t}\n\n\t\treturn new Response(body, {\n\t\t\t...init,\n\t\t\theaders\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\ttype: {enumerable: true},\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}