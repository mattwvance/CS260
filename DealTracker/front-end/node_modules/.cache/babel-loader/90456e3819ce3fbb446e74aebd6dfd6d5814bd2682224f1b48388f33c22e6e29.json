{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nexport var FetchBaseError = /*#__PURE__*/function (_Error, _Symbol$toStringTag) {\n  _inherits(FetchBaseError, _Error);\n  var _super = _createSuper(FetchBaseError);\n  function FetchBaseError(message, type) {\n    var _this;\n    _classCallCheck(this, FetchBaseError);\n    _this = _super.call(this, message);\n    // Hide custom error implementation details from end-users\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    _this.type = type;\n    return _this;\n  }\n  _createClass(FetchBaseError, [{\n    key: \"name\",\n    get: function get() {\n      return this.constructor.name;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return this.constructor.name;\n    }\n  }]);\n  return FetchBaseError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), Symbol.toStringTag);","map":{"version":3,"names":["FetchBaseError","message","type","Error","captureStackTrace","constructor","name","Symbol","toStringTag"],"sources":["/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/node-fetch/src/errors/base.js"],"sourcesContent":["export class FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n"],"mappings":";;;;;;AAAA,WAAaA,cAAc;EAAA;EAAA;EAC1B,wBAAYC,OAAO,EAAEC,IAAI,EAAE;IAAA;IAAA;IAC1B,0BAAMD,OAAO;IACb;IACAE,KAAK,CAACC,iBAAiB,gCAAO,MAAKC,WAAW,CAAC;IAE/C,MAAKH,IAAI,GAAGA,IAAI;IAAC;EAClB;EAAC;IAAA;IAAA,KAED,eAAW;MACV,OAAO,IAAI,CAACG,WAAW,CAACC,IAAI;IAC7B;EAAC;IAAA;IAAA,KAED,eAA2B;MAC1B,OAAO,IAAI,CAACD,WAAW,CAACC,IAAI;IAC7B;EAAC;EAAA;AAAA,iCAfkCH,KAAK,GAanCI,MAAM,CAACC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}