{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classPrivateFieldInitSpec from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport _wrapAsyncGenerator from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nvar _Symbol$toStringTag;\nimport { statSync, createReadStream, promises as fs } from 'node:fs';\nimport { basename } from 'node:path';\nimport DOMException from 'node-domexception';\nimport File from './file.js';\nimport Blob from './index.js';\nvar stat = fs.stat;\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nvar blobFromSync = function blobFromSync(path, type) {\n  return fromBlob(statSync(path), path, type);\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nvar blobFrom = function blobFrom(path, type) {\n  return stat(path).then(function (stat) {\n    return fromBlob(stat, path, type);\n  });\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nvar fileFrom = function fileFrom(path, type) {\n  return stat(path).then(function (stat) {\n    return fromFile(stat, path, type);\n  });\n};\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nvar fileFromSync = function fileFromSync(path, type) {\n  return fromFile(statSync(path), path, type);\n};\n\n// @ts-ignore\nvar fromBlob = function fromBlob(stat, path) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return new Blob([new BlobDataItem({\n    path: path,\n    size: stat.size,\n    lastModified: stat.mtimeMs,\n    start: 0\n  })], {\n    type: type\n  });\n};\n\n// @ts-ignore\nvar fromFile = function fromFile(stat, path) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return new File([new BlobDataItem({\n    path: path,\n    size: stat.size,\n    lastModified: stat.mtimeMs,\n    start: 0\n  })], basename(path), {\n    type: type,\n    lastModified: stat.mtimeMs\n  });\n};\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nvar _path = /*#__PURE__*/new WeakMap();\nvar _start = /*#__PURE__*/new WeakMap();\n_Symbol$toStringTag = Symbol.toStringTag;\nvar BlobDataItem = /*#__PURE__*/function () {\n  function BlobDataItem(options) {\n    _classCallCheck(this, BlobDataItem);\n    _classPrivateFieldInitSpec(this, _path, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _start, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _path, options.path);\n    _classPrivateFieldSet(this, _start, options.start);\n    this.size = options.size;\n    this.lastModified = options.lastModified;\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  _createClass(BlobDataItem, [{\n    key: \"slice\",\n    value: function slice(start, end) {\n      return new BlobDataItem({\n        path: _classPrivateFieldGet(this, _path),\n        lastModified: this.lastModified,\n        size: end - start,\n        start: _classPrivateFieldGet(this, _start) + start\n      });\n    }\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_awaitAsyncGen, mtimeMs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _awaitAsyncGenerator(stat(_classPrivateFieldGet(_this, _path)));\n              case 2:\n                _yield$_awaitAsyncGen = _context.sent;\n                mtimeMs = _yield$_awaitAsyncGen.mtimeMs;\n                if (!(mtimeMs > _this.lastModified)) {\n                  _context.next = 6;\n                  break;\n                }\n                throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError');\n              case 6:\n                return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(createReadStream(_classPrivateFieldGet(_this, _path), {\n                  start: _classPrivateFieldGet(_this, _start),\n                  end: _classPrivateFieldGet(_this, _start) + _this.size - 1\n                })), _awaitAsyncGenerator), \"t0\", 7);\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Blob';\n    }\n  }]);\n  return BlobDataItem;\n}();\nexport default blobFromSync;\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync };","map":{"version":3,"names":["statSync","createReadStream","promises","fs","basename","DOMException","File","Blob","stat","blobFromSync","path","type","fromBlob","blobFrom","then","fileFrom","fromFile","fileFromSync","BlobDataItem","size","lastModified","mtimeMs","start","Symbol","toStringTag","options","end"],"sources":["/home/ubuntu/environment/public_html/DealTracker/front-end/node_modules/fetch-blob/from.js"],"sourcesContent":["import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}